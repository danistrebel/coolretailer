steps:

- id: Decrypt credendtials from KMS
  name: gcr.io/cloud-builders/gcloud
  args:
  - kms
  - decrypt
  - --ciphertext-file=app-gac.json.enc
  - --plaintext-file=app-gac.json
  - --location=global
  - --keyring=coolretailer
  - --key=app-gac

- id: Build jars
  name: 'gcr.io/cloud-builders/mvn'
  args: ['-f','src/app','package']
  env: 
  - 'GOOGLE_CLOUD_PROJECT=coolretailer'
  - 'GOOGLE_APPLICATION_CREDENTIALS=/workspace/app-gac.json'

- id: Build app image
  name: 'gcr.io/cloud-builders/docker'
  args: [
          'build', 
          '--tag=gcr.io/$PROJECT_ID/queryservice:latest', 
          '--cache-from', 'gcr.io/$PROJECT_ID/queryservice:latest',
          '.'
        ]
  dir: 'src/app'

- id: Tag image with COMMIT_SHA
  name: 'gcr.io/cloud-builders/docker'
  args: [
        'tag', 
        'gcr.io/$PROJECT_ID/queryservice:latest', 
        'gcr.io/$PROJECT_ID/queryservice:$COMMIT_SHA'
      ]

- id: Set image TAG_NAME in deployment manifests
  name: 'ubuntu'
  args: ['bash','-c','sed -i "s,TAG_NAME,$COMMIT_SHA," ./setup/kubernetes-manifests/queryservice.yaml']

- id: Set image REDIS_HOST in app deployment
  name: 'ubuntu'
  args: ['bash','-c','sed -i "s,REDIS_HOST,redis-master," ./setup/kubernetes-manifests/queryservice.yaml']

- id: Deploy to GKE
  name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', './setup/kubernetes-manifests/queryservice.yaml']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=europe-west4-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=istio-mesh'

images: [
          'gcr.io/$PROJECT_ID/queryservice:$COMMIT_SHA',
          'gcr.io/$PROJECT_ID/queryservice:latest'
        ]